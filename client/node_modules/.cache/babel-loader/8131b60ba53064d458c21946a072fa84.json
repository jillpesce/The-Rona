{"ast":null,"code":"var _jsxFileName = \"/Users/caromurphy/Desktop/CIS 450/Final Project/CIS450_Project/client/src/components/Dashboard.js\";\nimport React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\nimport queryString from \"query-string\";\nimport PropTypes from 'prop-types';\nexport default class Dashboard extends React.Component {\n  // static propTypes = {\n  //   authenticated: PropTypes.bool.isRequired\n  // };\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n\n    this.state = {\n      genres: [],\n      movies: []\n    };\n    this.showMovies = this.showMovies.bind(this);\n  } // React function that is called when the page load.\n\n\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/genres\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(genreList => {\n      if (!genreList) return; // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n\n      let genreDivs = genreList.map((genreObj, i) => React.createElement(GenreButton, {\n        id: \"button-\" + genreObj.genre,\n        onClick: () => this.showMovies(genreObj.genre),\n        genre: genreObj.genre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })); // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        genres: genreDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n  /* ---- Q1b (Dashboard) ---- */\n\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n\n\n  showMovies(genre) {\n    fetch(`http://localhost:8081/genres/'${genre}'`, {\n      method: \"GET\"\n    }).then(res => {\n      return res.json();\n    }, err => {\n      console.log(err);\n    }).then(topMovies => {\n      if (!topMovies) return;\n      let movieDivs = topMovies.map((topMovie, i) => React.createElement(DashboardMovieRow, {\n        title: topMovie.title,\n        rating: topMovie.rating,\n        votes: topMovie.votes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n      this.setState({\n        movies: movieDivs\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(PageNavbar, {\n      active: \"dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:8081/auth/google\",\n      class: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"svgIcon t-popup-svg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      class: \"svgIcon-use\",\n      width: \"25\",\n      height: \"37\",\n      viewBox: \"0 0 25 25\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"g\", {\n      fill: \"none\",\n      \"fill-rule\": \"evenodd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      d: \"M20.66 12.693c0-.603-.054-1.182-.155-1.738H12.5v3.287h4.575a3.91 3.91 0 0 1-1.697 2.566v2.133h2.747c1.608-1.48 2.535-3.65 2.535-6.24z\",\n      fill: \"#4285F4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      d: \"M12.5 21c2.295 0 4.22-.76 5.625-2.06l-2.747-2.132c-.76.51-1.734.81-2.878.81-2.214 0-4.088-1.494-4.756-3.503h-2.84v2.202A8.498 8.498 0 0 0 12.5 21z\",\n      fill: \"#34A853\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      d: \"M7.744 14.115c-.17-.51-.267-1.055-.267-1.615s.097-1.105.267-1.615V8.683h-2.84A8.488 8.488 0 0 0 4 12.5c0 1.372.328 2.67.904 3.817l2.84-2.202z\",\n      fill: \"#FBBC05\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      d: \"M12.5 7.38c1.248 0 2.368.43 3.25 1.272l2.437-2.438C16.715 4.842 14.79 4 12.5 4a8.497 8.497 0 0 0-7.596 4.683l2.84 2.202c.668-2.01 2.542-3.504 4.756-3.504z\",\n      fill: \"#EA4335\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })))), React.createElement(\"span\", {\n      class: \"button-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Sign in with Google\")))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container movies-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Top Movies\"), React.createElement(\"div\", {\n      className: \"genres-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.state.genres)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movies-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movies-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Title\")), React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Rating\")), React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Vote Count\"))), React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.state.movies)))));\n  }\n\n}\nDashboard.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  setAuthenticated: Proptypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/caromurphy/Desktop/CIS 450/Final Project/CIS450_Project/client/src/components/Dashboard.js"],"names":["React","PageNavbar","GenreButton","DashboardMovieRow","queryString","PropTypes","Dashboard","Component","constructor","props","state","genres","movies","showMovies","bind","componentDidMount","fetch","method","then","res","json","err","console","log","genreList","genreDivs","map","genreObj","i","genre","setState","topMovies","movieDivs","topMovie","title","rating","votes","render","propTypes","isAuthenticated","bool","isRequired","setAuthenticated","Proptypes","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\nimport queryString from \"query-string\";\nimport PropTypes from 'prop-types';\n\nexport default class Dashboard extends React.Component {\n  // static propTypes = {\n  //   authenticated: PropTypes.bool.isRequired\n  // };\n  \n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n    this.state = {\n      genres: [],\n      movies: []\n    }\n\n    this.showMovies = this.showMovies.bind(this);\n  }\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/genres\",\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(genreList => {\n      if (!genreList) return;\n      // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n      let genreDivs = genreList.map((genreObj, i) =>\n      <GenreButton id={\"button-\" + genreObj.genre} onClick={() => this.showMovies(genreObj.genre)} genre={genreObj.genre} />\n      );\n\n      \n\n      // Set the state of the genres list to the value returned by the HTTP response from the server.\n      this.setState({\n        genres: genreDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n\n  /* ---- Q1b (Dashboard) ---- */\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n  showMovies(genre) {\n    fetch(`http://localhost:8081/genres/'${genre}'`, \n    {\n      method: \"GET\"\n    }).then(res => {\n      return res.json()\n    }, err => {\n      console.log(err);\n    }).then(topMovies => {\n      if (!topMovies) return;\n      let movieDivs = topMovies.map((topMovie, i) => \n      <DashboardMovieRow title={topMovie.title} rating={topMovie.rating} votes={topMovie.votes}/>\n      );\n\n      this.setState({\n        movies: movieDivs\n      });\n    }, err => {\n      console.log(err);\n    });\n  \n  }\n  \n  render() {    \n    return (\n      <div className=\"Dashboard\">\n\n        <PageNavbar active=\"dashboard\" />\n          <h3> \n            <a href=\"http://localhost:8081/auth/google\" class=\"button\">\n              <div>\n                <span class=\"svgIcon t-popup-svg\">\n                  <svg class=\"svgIcon-use\" width=\"25\" height=\"37\" viewBox=\"0 0 25 25\">\n                    <g fill=\"none\" fill-rule=\"evenodd\">\n                      <path d=\"M20.66 12.693c0-.603-.054-1.182-.155-1.738H12.5v3.287h4.575a3.91 3.91 0 0 1-1.697 2.566v2.133h2.747c1.608-1.48 2.535-3.65 2.535-6.24z\" fill=\"#4285F4\"/>\n                      <path d=\"M12.5 21c2.295 0 4.22-.76 5.625-2.06l-2.747-2.132c-.76.51-1.734.81-2.878.81-2.214 0-4.088-1.494-4.756-3.503h-2.84v2.202A8.498 8.498 0 0 0 12.5 21z\" fill=\"#34A853\"/>\n                      <path d=\"M7.744 14.115c-.17-.51-.267-1.055-.267-1.615s.097-1.105.267-1.615V8.683h-2.84A8.488 8.488 0 0 0 4 12.5c0 1.372.328 2.67.904 3.817l2.84-2.202z\" fill=\"#FBBC05\"/>\n                      <path d=\"M12.5 7.38c1.248 0 2.368.43 3.25 1.272l2.437-2.438C16.715 4.842 14.79 4 12.5 4a8.497 8.497 0 0 0-7.596 4.683l2.84 2.202c.668-2.01 2.542-3.504 4.756-3.504z\" fill=\"#EA4335\"/>\n                    </g>\n                  </svg>\n                </span>\n              <span class=\"button-label\">Sign in with Google</span>\n              </div>\n            </a> \n          </h3>\n        <br></br>\n        <div className=\"container movies-container\">\n          <div className=\"jumbotron\">\n            <div className=\"h5\">Top Movies</div>\n            <div className=\"genres-container\">\n              {this.state.genres}\n            </div>\n          </div>\n\n          <br></br>\n          <div className=\"jumbotron\">\n            <div className=\"movies-container\">\n              <div className=\"movies-header\">\n                <div className=\"header-lg\"><strong>Title</strong></div>\n                <div className=\"header\"><strong>Rating</strong></div>\n                <div className=\"header\"><strong>Vote Count</strong></div>\n              </div>\n              <div className=\"results-container\" id=\"results\">\n                {this.state.movies}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  setAuthenticated: Proptypes.func.isRequired,\n}"]},"metadata":{},"sourceType":"module"}